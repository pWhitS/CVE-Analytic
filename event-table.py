import sys
import math


def percentChange(v1, v2, growth):
	if int(v1) == 0:
		div1 = 1
	elif int(v1) > 0:
		div1 = v1
	else:
		print "[Error:] wat.."

	return (((int(v2) - int(v1)) / math.fabs(int(div1))) * 100)


def calculateEffects(vBeforeList, vAfterList, vulnType):
	i = j = 0
	totalBeforeChange = 0
	totalAfterChange = 0

	while i < len(vBeforeList)-1:
		totalBeforeChange += percentChange(vBeforeList[i], vBeforeList[i+1], 0)
		i += 1
	avgBeforeChange = totalBeforeChange/len(vBeforeList)
	
	while j < len(vAfterList)-1:
		totalAfterChange += percentChange(vAfterList[j], vAfterList[j+1], 0)
		j += 1
	avgAfterChange = totalAfterChange/len(vAfterList)

	return [vulnType, totalBeforeChange, avgBeforeChange, totalAfterChange, avgAfterChange]


#---MAIN--(MAP?)--#
filename = sys.argv[1]
window = int(sys.argv[2])

with open(filename, 'r') as fin:
	eventList = fin.readlines()

with open("month.csv", 'r') as fmonth:
	cveMonthList = fmonth.readlines()

effectList = []

for event in eventList:
	event = event.strip()
	name, date, os = event.split(',')
	month, day, year = date.split('-')

	outfn = "{0}-{1}-{2}.csv".format(name, os, date).replace(" ", "")

	beforeList = []
	afterList = []
	isAfter = False

	for line in cveMonthList:
		line = line.strip()

		eventDate = str(year) + "-" + str(month)
		cveDate = line.split(',')[0].split(':')[1]

		if eventDate == cveDate:
			isAfter = True

		if not isAfter:
			if len(beforeList) < window:
				beforeList.append(line)
			else:
				beforeList = beforeList[1:]
				beforeList.append(line)
		elif isAfter and (len(afterList) < window + 1):
			afterList.append(line)

	#convert lists of strings to lists of dictionaries
	for i in range(len(beforeList)):
		beforeList[i] = dict(item.split(":") for item in beforeList[i].split(","))

	for i in range(len(afterList)):
		afterList[i] = dict(item.split(":") for item in afterList[i].split(","))

	minDate = min([beforeList[i]["Date"] for i in range(len(beforeList))])
	maxDate = max([afterList[i]["Date"] for i in range(len(afterList))])
	#outputStr += "{0},{1}\n".format(minDate, maxDate)

	vdict = beforeList[0] #grab a dictionary for iteration over keys
	for vkey in vdict:
		if vkey == "Date":
			continue

		vulnsBefore = []
		vulnsAfter = []

		for vulnDict in beforeList:
			vulnsBefore.append(vulnDict[vkey])

		for vulnDict in afterList:
			vulnsAfter.append(vulnDict[vkey])

		tempList = calculateEffects(vulnsBefore, vulnsAfter, vkey)
		effectList.append(tempList)
	break


ofl = open(outfn, 'w')
#---REDUCE??---#
for i in range(len(effectList[0])):
	for j in range(len(effectList)):
		ofl.write(str(effectList[j][i]))
		if j < len(effectList)-1:
			ofl.write(",")

	ofl.write("\n")


	